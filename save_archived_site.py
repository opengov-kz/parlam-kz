import os
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin, urlparse
from tqdm import tqdm

# 1. –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∞—Ä—Ö–∏–≤
BASE_WAYBACK_URL = "https://web.archive.org/web/20041212122127/http://www.parlam.kz/"

# 2. –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
DOCUMENT_EXTENSIONS = [
    ".pdf", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx",
    ".zip", ".rar", ".7z", ".rtf", ".txt"
]

# 3. –ü–∞–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
SAVE_FOLDER = "downloaded_files"
os.makedirs(SAVE_FOLDER, exist_ok=True)

# 4. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ
def get_internal_links(url):
    try:
        r = requests.get(url)
        soup = BeautifulSoup(r.text, "html.parser")
        links = set()

        for a in soup.find_all("a", href=True):
            href = a["href"]
            full_url = urljoin(url, href)
            if "web.archive.org" in full_url and "parlam.kz" in full_url:
                links.add(full_url.split("#")[0])
        return list(links)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–æ–∫: {e}")
        return []

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω—É–∂–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
def is_document(url):
    return any(url.lower().endswith(ext) for ext in DOCUMENT_EXTENSIONS)

# 6. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
def download_file(url):
    try:
        parsed_url = urlparse(url)
        filename = os.path.basename(parsed_url.path)
        save_path = os.path.join(SAVE_FOLDER, filename)

        if not os.path.exists(save_path):
            response = requests.get(url, stream=True, timeout=15)
            with open(save_path, 'wb') as f:
                for chunk in response.iter_content(chunk_size=8192):
                    f.write(chunk)
            print(f"‚úî –°–∫–∞—á–∞–Ω: {filename}")
        else:
            print(f"‚è© –£–∂–µ –µ—Å—Ç—å: {filename}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ {url}: {e}")

# 7. –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
def crawl_and_download(start_url):
    visited = set()
    to_visit = [start_url]

    while to_visit:
        current = to_visit.pop(0)
        if current in visited:
            continue
        visited.add(current)

        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {current}")
        try:
            r = requests.get(current, timeout=10)
            soup = BeautifulSoup(r.text, "html.parser")

            # –ù–∞–π—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å–∫–∞—á–∞—Ç—å
            for a in soup.find_all("a", href=True):
                href = a["href"]
                full_url = urljoin(current, href)
                if is_document(full_url):
                    download_file(full_url)

                # –î–æ–±–∞–≤–∏–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞
                if "parlam.kz" in full_url and full_url not in visited and full_url.startswith("https://web.archive.org"):
                    to_visit.append(full_url)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    crawl_and_download(BASE_WAYBACK_URL)
